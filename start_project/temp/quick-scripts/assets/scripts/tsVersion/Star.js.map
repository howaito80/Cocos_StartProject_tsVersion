{"version":3,"sources":["Star.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAEM,IAAA,kBAAmC,EAAlC,oBAAO,EAAE,sBAAyB,CAAC;AAG1C;IAAkC,wBAAY;IAD9C;QAAA,qEAwCC;QApCG,gBAAU,GAAW,CAAC,CAAC;QAGvB,eAAS,GAAiB,IAAI,CAAC;QAG/B,cAAQ,GAAW,CAAC,CAAC;QAEd,UAAI,GAAS,IAAI,CAAC;QAClB,YAAM,GAAY,IAAI,CAAC;QAEtB,WAAK,GAAW,CAAC,CAAC;;IAyB9B,CAAC;IAvBU,mBAAI,GAAX,UAAY,IAAU;QAElB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;QAC/B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC;IAC/B,CAAC;IACD,qBAAM,GAAN,UAAQ,EAAU;QAEd,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC;QACjB,IAAG,IAAI,CAAC,KAAK,IAAI,CAAC,EAClB;YACI,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;YACrB,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;YACpB,OAAO;SACV;QACD,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,GAAG,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC;QACrD,IAAG,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,EAAE,IAAI,IAAI,CAAC,UAAU,CAAC,EAC1E;YACI,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;YAC9C,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;YACrB,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;SACvB;IACL,CAAC;IAnCD;QADC,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC;4CACI;IAGvB;QADC,QAAQ,CAAC,EAAE,CAAC,SAAS,CAAC;2CACQ;IAG/B;QADC,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC;0CACE;IATJ,IAAI;QADxB,OAAO;OACa,IAAI,CAuCxB;IAAD,WAAC;CAvCD,AAuCC,CAvCiC,EAAE,CAAC,SAAS,GAuC7C;kBAvCoB,IAAI","file":"","sourceRoot":"..\\..\\..\\..\\..\\assets\\scripts\\tsVersion","sourcesContent":["import { Game } from \"./Game\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Star extends cc.Component {\r\n\r\n    @property(cc.Float)\r\n    pickRadius: number = 0;\r\n\r\n    @property(cc.AudioClip)\r\n    pickAudio: cc.AudioClip = null;\r\n\r\n    @property(cc.Float)\r\n    lifeTime: number = 0;\r\n    \r\n    public game: Game = null;\r\n    public player: cc.Node = null;\r\n\r\n    private timer: number = 0;\r\n\r\n    public init(game: Game)\r\n    {\r\n        this.game = game;\r\n        this.player = game.player.node;\r\n        this.timer = this.lifeTime;\r\n    }\r\n    update (dt: number) \r\n    {\r\n        this.timer -= dt;\r\n        if(this.timer <= 0)\r\n        {\r\n            this.game.loseStar();\r\n            this.node.destroy();\r\n            return;\r\n        }\r\n        this.node.opacity = 255 * this.timer / this.lifeTime;\r\n        if((this.node.position.sub(this.player.position).mag() <= this.pickRadius))\r\n        {\r\n            cc.audioEngine.play(this.pickAudio, false, 1);\r\n            this.game.gainStar();\r\n            this.node.destroy();\r\n        }\r\n    }\r\n}\r\n"]}